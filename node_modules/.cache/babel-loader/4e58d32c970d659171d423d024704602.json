{"ast":null,"code":"var _jsxFileName = \"/Users/lawrenceliao/Desktop/a2-frontend/src/components/Signup/SignupForm/SignupForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, InputAdornment, TextField } from '@material-ui/core';\nimport { AccountCircle, LockRounded } from '@material-ui/icons';\nimport { Form, Formik, Field, ErrorMessage } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport './SignupForm.scss';\nimport * as apiUtils from '../../../utils/apiUtils';\nimport WarningMessage from '../WarningMessage/WarningMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignupForm = () => {\n  _s();\n\n  const history = useHistory();\n  const [warning, setWarning] = useState({\n    shown: false,\n    message: ''\n  });\n  const initialValues = {\n    email: '',\n    username: '',\n    password: ''\n  };\n\n  const onSubmit = async ({\n    email,\n    username,\n    password\n  }) => {\n    setWarning({\n      shown: false,\n      message: ''\n    });\n\n    try {\n      const signupResponse = await apiUtils.signup({\n        email,\n        username,\n        password\n      });\n\n      if (signupResponse.status === 200) {\n        history.push('/login');\n      }\n    } catch (error) {\n      if (error.response.status >= 500) {\n        setWarning({\n          shown: true,\n          message: \"INTERNAL_SERVER_ERROR\"\n        });\n      }\n\n      if (error.response.status >= 400 && error.response.status < 500) {\n        setWarning({\n          shown: true,\n          message: \"The email already exists” \"\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup_form\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: warning.shown ? /*#__PURE__*/_jsxDEV(WarningMessage, {\n            content: warning.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 34\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          label: \"Email\",\n          name: \"email\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          fullWidth: true,\n          id: \"email\",\n          autoFocus: true,\n          autoComplete: \"email\",\n          helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          label: \"Username\",\n          name: \"username\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          fullWidth: true,\n          id: \"username\",\n          autoFocus: true,\n          autoComplete: \"username\",\n          helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"username\",\n            children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }, this),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          \"data-testid\": \"passwordInput\",\n          as: TextField,\n          label: \"Password\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          fullWidth: true,\n          id: \"password\",\n          type: \"password\",\n          name: \"password\",\n          autoComplete: \"current-password\",\n          helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 19\n          }, this),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(LockRounded, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          style: {\n            backgroundColor: '#2ab782'\n          },\n          disabled: isSubmitting,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SignupForm, \"HTfLxjLpOWcLlusmHIkusCSulQg=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignupForm;\nexport default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["/Users/lawrenceliao/Desktop/a2-frontend/src/components/Signup/SignupForm/SignupForm.jsx"],"names":["React","useState","Button","InputAdornment","TextField","AccountCircle","LockRounded","Form","Formik","Field","ErrorMessage","useHistory","apiUtils","WarningMessage","SignupForm","history","warning","setWarning","shown","message","initialValues","email","username","password","onSubmit","signupResponse","signup","status","push","error","response","isSubmitting","msg","startAdornment","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n    Button,\n    InputAdornment,\n    TextField,\n} from '@material-ui/core';\nimport { AccountCircle, LockRounded } from '@material-ui/icons';\nimport { Form, Formik, Field, ErrorMessage } from 'formik';\nimport {\n    useHistory,\n} from 'react-router-dom';\nimport './SignupForm.scss';\nimport * as apiUtils from '../../../utils/apiUtils';\nimport WarningMessage from '../WarningMessage/WarningMessage';\n\n\nconst SignupForm = () => {\n    const history = useHistory();\n    const [warning, setWarning] = useState({\n      shown: false,\n      message: '',\n    });\n  \n    const initialValues = {\n      email: '',\n      username: '',\n      password: '',\n    };\n   \n    const onSubmit = async ({ email, username, password }) => {\n      setWarning({\n        shown: false,\n        message: '',\n      });\n      try {\n        const signupResponse = await apiUtils.signup({ email, username, password });\n\n  \n        if (signupResponse.status === 200) {\n          history.push('/login');\n        }\n        \n      } catch (error) {\n        if (error.response.status >= 500) {\n          setWarning({\n            shown: true,\n            message: \"INTERNAL_SERVER_ERROR\",\n          });\n        }\n        if (error.response.status >= 400 && error.response.status < 500) {\n          setWarning({\n            shown: true,\n            message: \"The email already exists” \",\n          });\n        }\n      }\n    };\n    return (\n      <div className=\"signup_form\">\n        <Formik\n          initialValues={initialValues}\n          onSubmit={onSubmit}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <div>\n                {warning.shown ? <WarningMessage content={warning.message} /> : null}\n              </div>\n              <div>\n              </div>\n              <Field\n                as={TextField}\n                label=\"Email\"\n                name=\"email\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"email\"\n                autoFocus\n                autoComplete=\"email\"\n                helperText={(\n                  <ErrorMessage name=\"email\">\n                    { (msg) => <span className=\"errorMessage\">{msg}</span>}\n                  </ErrorMessage>\n                )}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AccountCircle />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <Field\n                as={TextField}\n                label=\"Username\"\n                name=\"username\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"username\"\n                autoFocus\n                autoComplete=\"username\"\n                helperText={(\n                  <ErrorMessage name=\"username\">\n                    { (msg) => <span className=\"errorMessage\">{msg}</span>}\n                  </ErrorMessage>\n                )}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AccountCircle />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <Field\n                data-testid=\"passwordInput\"\n                as={TextField}\n                label=\"Password\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n                autoComplete=\"current-password\"\n                helperText={(\n                  <ErrorMessage name=\"password\">\n                    { (msg) => <span className=\"errorMessage\">{msg}</span>}\n                  </ErrorMessage>\n                )}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <LockRounded />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                style={{ backgroundColor: '#2ab782' }}\n                disabled={isSubmitting}\n              >\n                Register\n              </Button>\n              \n            </Form>\n          )}\n        </Formik>\n      </div>\n    );\n  };\n  \n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}