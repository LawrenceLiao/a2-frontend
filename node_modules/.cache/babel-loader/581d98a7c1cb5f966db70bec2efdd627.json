{"ast":null,"code":"var _jsxFileName = \"/Users/lawrenceliao/Desktop/a2-frontend/src/components/Login/LoginForm/LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Grid, InputAdornment, TextField, FormControlLabel, Checkbox, Typography } from '@material-ui/core';\nimport { AccountCircle, LockRounded } from '@material-ui/icons';\nimport { Form, Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as apiUtils from '../../../../utils/apiUtils';\nimport './LoginForm.scss';\nimport WarningMessage from '../WarningMessage/WarningMessage';\nimport ResendMessage from '../ResendMessage/ResendMessage';\nimport { INTERNAL_SERVER_ERROR, USERNAME_PASSWORD_MISMATCH_ERROR } from './const/const';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const history = useHistory();\n  const [warning, setWarning] = useState({\n    shown: false,\n    message: ''\n  });\n  const [resendMessage, setResendMessage] = useState({\n    shown: false\n  });\n  const initialValues = {\n    email: '',\n    password: ''\n  };\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('Please enter valid email').required('Email Required!'),\n    password: Yup.string().required('Password Required!')\n  });\n\n  const onSubmit = async ({\n    email,\n    password\n  }) => {\n    setResendMessage({\n      shown: false\n    });\n    setWarning({\n      shown: false,\n      message: ''\n    });\n\n    try {\n      const loginResponse = await apiUtils.login({\n        email,\n        password\n      });\n      const statusResponse = await apiUtils.verifyStatus(email);\n      const companyResponse = await apiUtils.verifyCompany(email);\n\n      if (loginResponse.status === 200 && statusResponse.status === 200) {\n        localStorage.setItem('email', email);\n        localStorage.setItem('login', 'true');\n        localStorage.setItem('userId', loginResponse.data.id);\n        localStorage.setItem('name', loginResponse.data.name);\n\n        if (companyResponse.status === 200) {\n          localStorage.setItem('companyId', companyResponse.data);\n          history.push('/dashboard');\n        }\n\n        if (companyResponse.status === 204) {\n          history.push('/firstlogin');\n        }\n      }\n\n      if (statusResponse.status === 203) {\n        localStorage.setItem('email', email);\n        setResendMessage({\n          shown: true\n        });\n      }\n    } catch (error) {\n      if (error.response.status >= 500) {\n        setWarning({\n          shown: true,\n          message: INTERNAL_SERVER_ERROR\n        });\n      }\n\n      if (error.response.status >= 400 && error.response.status < 500) {\n        setWarning({\n          shown: true,\n          message: USERNAME_PASSWORD_MISMATCH_ERROR\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login_form\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: warning.shown ? /*#__PURE__*/_jsxDEV(WarningMessage, {\n            content: warning.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 34\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: resendMessage.shown ? /*#__PURE__*/_jsxDEV(ResendMessage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 40\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: TextField,\n          label: \"Email\",\n          name: \"email\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          fullWidth: true,\n          id: \"email\",\n          autoFocus: true,\n          autoComplete: \"email\",\n          helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }, this),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 21\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          \"data-testid\": \"passwordInput\",\n          as: TextField,\n          label: \"Password\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          fullWidth: true,\n          id: \"password\",\n          type: \"password\",\n          name: \"password\",\n          autoComplete: \"current-password\",\n          helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            children: msg => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 19\n          }, this),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(LockRounded, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 21\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"remember\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            as: FormControlLabel,\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              value: \"remember\",\n              style: {\n                color: '#2ab782'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 28\n            }, this),\n            label: \"Remember me\",\n            name: \"remember\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          style: {\n            backgroundColor: '#2ab782'\n          },\n          disabled: isSubmitting,\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justify: \"space-between\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"link\",\n                to: \"/\",\n                children: \"Forgot Password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"New User? \\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n                id: \"signUpLink\",\n                className: \"link\",\n                to: \"/signup\",\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }, this);\n};\n\n_s(LoginForm, \"YrvM8qTKMmYZItp1GhbXQcmDLqY=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/lawrenceliao/Desktop/a2-frontend/src/components/Login/LoginForm/LoginForm.jsx"],"names":["React","useState","Button","Grid","InputAdornment","TextField","FormControlLabel","Checkbox","Typography","AccountCircle","LockRounded","Form","Formik","Field","ErrorMessage","Yup","Link","useHistory","apiUtils","WarningMessage","ResendMessage","INTERNAL_SERVER_ERROR","USERNAME_PASSWORD_MISMATCH_ERROR","LoginForm","history","warning","setWarning","shown","message","resendMessage","setResendMessage","initialValues","email","password","validationSchema","object","shape","string","required","onSubmit","loginResponse","login","statusResponse","verifyStatus","companyResponse","verifyCompany","status","localStorage","setItem","data","id","name","push","error","response","isSubmitting","msg","startAdornment","color","backgroundColor","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n    Button,\n    Grid,\n    InputAdornment,\n    TextField,\n    FormControlLabel,\n    Checkbox,\n    Typography,\n} from '@material-ui/core';\nimport { AccountCircle, LockRounded } from '@material-ui/icons';\nimport { Form, Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport {\n    Link,\n    useHistory,\n} from 'react-router-dom';\nimport * as apiUtils from '../../../../utils/apiUtils';\nimport './LoginForm.scss';\nimport WarningMessage from '../WarningMessage/WarningMessage';\nimport ResendMessage from '../ResendMessage/ResendMessage';\nimport { INTERNAL_SERVER_ERROR, USERNAME_PASSWORD_MISMATCH_ERROR } from './const/const';\n\nconst LoginForm = () => {\n    const history = useHistory();\n    const [warning, setWarning] = useState({\n      shown: false,\n      message: '',\n    });\n    const [resendMessage, setResendMessage] = useState({\n      shown: false,\n    });\n    const initialValues = {\n      email: '',\n      password: '',\n    };\n    const validationSchema = Yup.object().shape({\n      email: Yup.string().email('Please enter valid email').required('Email Required!'),\n      password: Yup.string().required('Password Required!'),\n    });\n    const onSubmit = async ({ email, password }) => {\n      setResendMessage({\n        shown: false,\n      });\n      setWarning({\n        shown: false,\n        message: '',\n      });\n      try {\n        const loginResponse = await apiUtils.login({ email, password });\n        const statusResponse = await apiUtils.verifyStatus(email);\n        const companyResponse = await apiUtils.verifyCompany(email);\n  \n        if (loginResponse.status === 200 && statusResponse.status === 200) {\n          localStorage.setItem('email', email);\n          localStorage.setItem('login', 'true');\n          localStorage.setItem('userId', loginResponse.data.id);\n          localStorage.setItem('name', loginResponse.data.name);\n  \n          if (companyResponse.status === 200) {\n            localStorage.setItem('companyId', companyResponse.data);\n            history.push('/dashboard');\n          }\n          if (companyResponse.status === 204) {\n            history.push('/firstlogin');\n          }\n        }\n        if (statusResponse.status === 203) {\n          localStorage.setItem('email', email);\n          setResendMessage({\n            shown: true,\n          });\n        }\n      } catch (error) {\n        if (error.response.status >= 500) {\n          setWarning({\n            shown: true,\n            message: INTERNAL_SERVER_ERROR,\n          });\n        }\n        if (error.response.status >= 400 && error.response.status < 500) {\n          setWarning({\n            shown: true,\n            message: USERNAME_PASSWORD_MISMATCH_ERROR,\n          });\n        }\n      }\n    };\n    return (\n      <div className=\"login_form\">\n        <Formik\n          initialValues={initialValues}\n          onSubmit={onSubmit}\n          validationSchema={validationSchema}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <div>\n                {warning.shown ? <WarningMessage content={warning.message} /> : null}\n              </div>\n              <div>\n                {resendMessage.shown ? <ResendMessage /> : null}\n              </div>\n              <Field\n                as={TextField}\n                label=\"Email\"\n                name=\"email\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"email\"\n                autoFocus\n                autoComplete=\"email\"\n                helperText={(\n                  <ErrorMessage name=\"email\">\n                    { (msg) => <span className=\"errorMessage\">{msg}</span>}\n                  </ErrorMessage>\n                )}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AccountCircle />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <Field\n                data-testid=\"passwordInput\"\n                as={TextField}\n                label=\"Password\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n                autoComplete=\"current-password\"\n                helperText={(\n                  <ErrorMessage name=\"password\">\n                    { (msg) => <span className=\"errorMessage\">{msg}</span>}\n                  </ErrorMessage>\n                )}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <LockRounded />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <div className=\"remember\">\n                <Field\n                  as={FormControlLabel}\n                  control={<Checkbox value=\"remember\" style={{ color: '#2ab782' }} />}\n                  label=\"Remember me\"\n                  name=\"remember\"\n                />\n              </div>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                style={{ backgroundColor: '#2ab782' }}\n                disabled={isSubmitting}\n              >\n                Sign in\n              </Button>\n              <div style={{ height: 10 }} />\n              <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n                <Grid item>\n                  <Typography>\n                    <Link className=\"link\" to=\"/\">\n                      Forgot Password?\n                    </Link>\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Typography>\n                    New User? &nbsp;\n                    <Link id=\"signUpLink\" className=\"link\" to=\"/signup\">\n                      Sign Up\n                    </Link>\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    );\n  };\n  \n  export default LoginForm;"]},"metadata":{},"sourceType":"module"}